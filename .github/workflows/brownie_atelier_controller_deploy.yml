name: Brownie Atelier Controller Deploy
run-name: Brownie Atelier Controller Deploy!!!
on:
    # 以下のブランチにプッシュされた際起動
    push:
        branches: ['develop','master']
    # Githubより手動で起動
    workflow_dispatch:

jobs:

  Branch-Controll:
    runs-on: ubuntu-22.04
    steps:
      - name: ブランチより環境を選択 (現在のブランチ： ${{ github.ref }})
        id: branch_check
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "env_name=PRODUCT" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "env_name=TEST" >> $GITHUB_OUTPUT
          else
            echo "env_name=TEST" >> $GITHUB_OUTPUT
          fi         
          
      - run: echo "環境名： ${{ steps.branch_check.outputs.env_name }}"
        
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}

  Brownie-Atelier-Controller-Deploy:
    # デプロイ手順参考サイト : https://learn.microsoft.com/ja-jp/azure/azure-functions/functions-how-to-github-actions?tabs=linux%2Cpython&pivots=method-manual#tabpanel_2_python_windows
    needs: [Branch-Controll]
    runs-on: ubuntu-22.04
    environment:
      name: ${{ needs.Branch-Controll.outputs.env_name }}
    env:
      AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
      PYTHON_VERSION: '3.10'
    

    steps:
      - run: echo "🎉 起動イベントの種類 (${{ github.event_name }})"
      - run: echo "🐧 github上のOSの種類 (${{ runner.os }})"
      - name: リポジトリ(${{ github.repository }})・ブランチ(${{ github.ref }})にチェックアウト
        # 上記のリポジトリ・ブランチにチェックアウト
        uses: actions/checkout@v4
        with:
          submodules: true  # サブモジュールを含めてチェックアウト
          fetch-depth: 0    # 全ての履歴をフェッチ
          # token: ${{ secrets.GITHUB_TOKEN }}  # プライベートリポジトリの場合はトークンが必要

      - name: ワークスペースチェック
        # クローン後はここにソースが格納される /home/runner/work/BrownieAtelierController/BrownieAtelierController
        run: |
          ls -a ${{ github.workspace }}

      #################################################
      # Azure Functionsへデプロイ
      #################################################
      - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
        uses: actions/setup-python@v5
        with:
            python-version: ${{ env.PYTHON_VERSION }}

      - name: 'Resolve Project Dependencies Using Pip'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ vars.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
